enum Mnemonics
{
	ADC,
	ADD,
	AND,
	BIT,
	CALL,
	CCF,
	CP,
	CPL,
	DAA,
	DEC,
	DI,
	EI,
	HALT,
	INC,
	JP,
	JR,
	LD,
	LDD,
	LDH,
	LDI,
	NOP,
	OR,
	POP,
	PUSH,
	RES,
	RET,
	RETI,
	RL,
	RLA,
	RLC,
	RLCA,
	RR,
	RRA,
	RRC,
	RRCA,
	RST,
	SBC,
	SCF,
	SET,
	SLA,
	SRA,
	SRL,
	STOP,
	SUB,
	SWAP,
	XOR
};



#define		MNEMONIC0		0x01
#define		MNEMONIC1		0x02
#define		MNEMONIC2		0x04
#define		MNEMONICARGS	0x07

#define		ARG_BITS16		0x0100

#define		ARG_REG8		0x0010
#define		ARG_REG_A		0x0020
#define		ARG_REG_B		0x0030
#define		ARG_REG_C		0x0040
#define		ARG_REG_D		0x0050
#define		ARG_REG_E		0x0060
#define		ARG_REG_H		0x0070
#define		ARG_REG_L		0x0080
#define		ARG_REG_SP		(0x0090 | ARG_BITS16)
#define		ARG_REG			(0x00F0 | ARG_BITS16)

#define		ARG_ADDRESS		0x8000

#define		ARG_REG_AF		(ARG_REG_A | ARG_BITS16)
#define		ARG_REG_BC		(ARG_REG_B | ARG_BITS16)
#define		ARG_REG_DE		(ARG_REG_D | ARG_BITS16)
#define		ARG_REG_HL		(ARG_REG_H | ARG_BITS16)

#define		ARG_REG__AF_	(ARG_REG_AF | ARG_ADDRESS)
#define		ARG_REG__BC_	(ARG_REG_BC | ARG_ADDRESS)
#define		ARG_REG__DE_	(ARG_REG_DE | ARG_ADDRESS)
#define		ARG_REG__HL_	(ARG_REG_HL | ARG_ADDRESS)

#define		ARG_DATA		0x0200
#define		ARG_DATA16		(ARG_DATA | ARG_BITS16)
#define		ARG_DISP		(0x0400 | ARG_DATA)

#define		ARG_COND		0x0800
#define		ARG_RST			(0x1000 | ARG_DATA)
#define		ARG_BIT			(0x2000 | ARG_DATA)


#define		ARG1(n)			((n) << 16)



#define		MAX_MNEMONIC	46
const MNEMONIC	MnemonicList[MAX_MNEMONIC] =
{
	"adc",	ADC,	MNEMONIC1 | MNEMONIC2,
	"add",	ADD,	MNEMONIC1 | MNEMONIC2,
	"and",	AND,	MNEMONIC1 | MNEMONIC2,
	"bit",	BIT,	MNEMONIC2,
	"call",	CALL,	MNEMONIC1 | MNEMONIC2,
	"ccf",	CCF,	MNEMONIC0,
	"cp",	CP,		MNEMONIC1 | MNEMONIC2,
	"cpl",	CPL,	MNEMONIC0,
	"daa",	DAA,	MNEMONIC0,
	"dec",	DEC,	MNEMONIC1,
	"di",	DI,		MNEMONIC0,
	"ei",	EI,		MNEMONIC0,
	"halt",	HALT,	MNEMONIC0,
	"inc",	INC,	MNEMONIC1,
	"jp",	JP,		MNEMONIC1 | MNEMONIC2,
	"jr",	JR,		MNEMONIC1 | MNEMONIC2,
	"ld",	LD,		MNEMONIC2,
	"ldd",	LDD,	MNEMONIC2,
	"ldh",	LDH,	MNEMONIC2,
	"ldi",	LDI,	MNEMONIC2,
	"nop",	NOP,	MNEMONIC0,
	"or",	OR,		MNEMONIC1 | MNEMONIC2,
	"pop",	POP,	MNEMONIC1,
	"push",	PUSH,	MNEMONIC1,
	"res",	RES,	MNEMONIC2,
	"ret",	RET,	MNEMONIC0 | MNEMONIC1,
	"reti",	RETI,	MNEMONIC0,
	"rl",	RL,		MNEMONIC1,
	"rla",	RLA,	MNEMONIC0,
	"rlc",	RLC,	MNEMONIC1,
	"rlca",	RLCA,	MNEMONIC0,
	"rr",	RR,		MNEMONIC1,
	"rra",	RRA,	MNEMONIC0,
	"rrc",	RRC,	MNEMONIC1,
	"rrca",	RRCA,	MNEMONIC0,
	"rst",	RST,	MNEMONIC1,
	"sbc",	SBC,	MNEMONIC1 | MNEMONIC2,
	"scf",	SCF,	MNEMONIC0,
	"set",	SET,	MNEMONIC2,
	"sla",	SLA,	MNEMONIC1,
	"sra",	SRA,	MNEMONIC1,
	"srl",	SRL,	MNEMONIC1,
	"stop",	STOP,	MNEMONIC0,
	"sub",	SUB,	MNEMONIC1 | MNEMONIC2,
	"swap",	SWAP,	MNEMONIC1,
	"xor",	XOR,	MNEMONIC1 | MNEMONIC2
};



#define		MAX_OPCODES		115
const OPCODE	OpCodeList[MAX_OPCODES] =
{
	ADC,	0xCE,	MNEMONIC1 | ARG_DATA,
	ADC,	0xCE,	MNEMONIC2 | ARG_REG_A | ARG1(ARG_DATA),
	ADC,	0x88,	MNEMONIC1 | ARG_REG8,
	ADC,	0x88,	MNEMONIC2 | ARG_REG_A | ARG1(ARG_REG8),
	ADD,	0xC6,	MNEMONIC1 | ARG_DATA,
	ADD,	0xC6,	MNEMONIC2 | ARG_REG_A | ARG1(ARG_DATA),
	ADD,	0x80,	MNEMONIC1 | ARG_REG8,
	ADD,	0x80,	MNEMONIC2 | ARG_REG_A | ARG1(ARG_REG8),
	ADD,	0x09,	MNEMONIC2 | ARG_REG_HL | ARG1(ARG_REG_BC),
	ADD,	0x19,	MNEMONIC2 | ARG_REG_HL | ARG1(ARG_REG_DE),
	ADD,	0x29,	MNEMONIC2 | ARG_REG_HL | ARG1(ARG_REG_HL),
	ADD,	0x39,	MNEMONIC2 | ARG_REG_HL | ARG1(ARG_REG_SP),
	ADD,	0xE8,	MNEMONIC2 | ARG_REG_SP | ARG1(ARG_DISP),
	AND,	0xE6,	MNEMONIC1 | ARG_DATA,
	AND,	0xE6,	MNEMONIC2 | ARG_REG_A | ARG1(ARG_DATA),
	AND,	0xA0,	MNEMONIC1 | ARG_REG8,
	AND,	0xA0,	MNEMONIC2 | ARG_REG_A | ARG1(ARG_REG8),
	BIT,	0xCB40,	MNEMONIC2 | ARG_BIT | ARG1(ARG_REG8),
	CALL,	0xCD,	MNEMONIC1 | ARG_DATA16,
	CALL,	0xC4,	MNEMONIC2 | ARG_COND | ARG1(ARG_DATA16),
	CCF,	0x3F,	MNEMONIC0,
	CP,		0xFE,	MNEMONIC1 | ARG_DATA,
	CP,		0xFE,	MNEMONIC2 | ARG_REG_A | ARG1(ARG_DATA),
	CP,		0xB8,	MNEMONIC1 | ARG_REG8,
	CP,		0xB8,	MNEMONIC2 | ARG_REG_A | ARG1(ARG_REG8),
	CPL,	0x2F,	MNEMONIC0,
	DAA,	0x27,	MNEMONIC0,
	DEC,	0x05,	MNEMONIC1 | ARG_REG_B,
	DEC,	0x0D,	MNEMONIC1 | ARG_REG_C,
	DEC,	0x15,	MNEMONIC1 | ARG_REG_D,
	DEC,	0x1D,	MNEMONIC1 | ARG_REG_E,
	DEC,	0x25,	MNEMONIC1 | ARG_REG_H,
	DEC,	0x2D,	MNEMONIC1 | ARG_REG_L,
	DEC,	0x35,	MNEMONIC1 | ARG_REG__HL_,
	DEC,	0x3D,	MNEMONIC1 | ARG_REG_A,
	DI,		0xF3,	MNEMONIC0,
	EI,		0xFB,	MNEMONIC0 | 0,
	HALT,	0x76,	MNEMONIC0,
	INC,	0x04,	MNEMONIC1 | ARG_REG_B,
	INC,	0x0C,	MNEMONIC1 | ARG_REG_C,
	INC,	0x14,	MNEMONIC1 | ARG_REG_D,
	INC,	0x1C,	MNEMONIC1 | ARG_REG_E,
	INC,	0x24,	MNEMONIC1 | ARG_REG_H,
	INC,	0x2C,	MNEMONIC1 | ARG_REG_L,
	INC,	0x34,	MNEMONIC1 | ARG_REG__HL_,
	INC,	0x3C,	MNEMONIC1 | ARG_REG_A,
	JP,		0xC3,	MNEMONIC1 | ARG_DATA16,
	JP,		0xC2,	MNEMONIC2 | ARG_COND | ARG1(ARG_DATA16),
	JR,		0x18,	MNEMONIC1 | ARG_DISP,
	JR,		0x20,	MNEMONIC2 | ARG_COND | ARG1(ARG_DISP),
	LD,		0x01,	MNEMONIC2 | ARG_REG_BC | ARG1(ARG_DATA16),
	LD,		0x11,	MNEMONIC2 | ARG_REG_DE | ARG1(ARG_DATA16),
	LD,		0x21,	MNEMONIC2 | ARG_REG_HL | ARG1(ARG_DATA16),
	LD,		0x31,	MNEMONIC2 | ARG_REG_SP | ARG1(ARG_DATA16),
	LD,		0x06,	MNEMONIC2 | ARG_REG8 | ARG1(ARG_DATA),
	LD,		0xEA,	MNEMONIC2 | ARG_DATA16 | ARG_ADDRESS | ARG1(ARG_REG_A),
	LD,		0xFA,	MNEMONIC2 | ARG_REG_A | ARG1(ARG_DATA16 | ARG_ADDRESS),
	LD,		0x02,	MNEMONIC2 | ARG_REG__BC_ | ARG1(ARG_REG_A),
	LD,		0x12,	MNEMONIC2 | ARG_REG__DE_ | ARG1(ARG_REG_A),
	LD,		0x0A,	MNEMONIC2 | ARG_REG_A | ARG1(ARG_REG__BC_),
	LD,		0x1A,	MNEMONIC2 | ARG_REG_A | ARG1(ARG_REG__DE_),
	LD,		0x40,	MNEMONIC2 | ARG_REG8 | ARG1(ARG_REG8),
	LDD,	0x32,	MNEMONIC2 | ARG_REG__HL_ | ARG1(ARG_REG_A),
	LDD,	0x3A,	MNEMONIC2 | ARG_REG_A | ARG1(ARG_REG__HL_),
	LDH,	0xE0,	MNEMONIC2 | ARG_ADDRESS | ARG_DATA | ARG1(ARG_REG_A),
	LDH,	0xF0,	MNEMONIC2 | ARG_REG_A | ARG1(ARG_ADDRESS | ARG_DATA),
	LDH,	0xE2,	MNEMONIC2 | ARG_ADDRESS | ARG_REG_C | ARG1(ARG_REG_A),
	LDH,	0xF2,	MNEMONIC2 | ARG_REG_A | ARG1(ARG_ADDRESS | ARG_REG_C),
	LDI,	0x22,	MNEMONIC2 | ARG_REG__HL_ | ARG1(ARG_REG_A),
	LDI,	0x2A,	MNEMONIC2 | ARG_REG_A | ARG1(ARG_REG__HL_),
	NOP,	0x00,	MNEMONIC0 | 0,
	OR,		0xF6,	MNEMONIC1 | ARG_DATA,
	OR,		0xF6,	MNEMONIC2 | ARG_REG_A | ARG1(ARG_DATA),
	OR,		0xB0,	MNEMONIC1 | ARG_REG8,
	OR,		0xB0,	MNEMONIC2 | ARG_REG_A | ARG1(ARG_REG8),
	POP,	0xC1,	MNEMONIC1 | ARG_REG_BC,
	POP,	0xD1,	MNEMONIC1 | ARG_REG_DE,
	POP,	0xE1,	MNEMONIC1 | ARG_REG_HL,
	POP,	0xF1,	MNEMONIC1 | ARG_REG_AF,
	PUSH,	0xC5,	MNEMONIC1 | ARG_REG_BC,
	PUSH,	0xD5,	MNEMONIC1 | ARG_REG_DE,
	PUSH,	0xE5,	MNEMONIC1 | ARG_REG_HL,
	PUSH,	0xF5,	MNEMONIC1 | ARG_REG_AF,
	RES,	0xCB80,	MNEMONIC2 | ARG_BIT | ARG1(ARG_REG8),
	RET,	0xC9,	MNEMONIC0,
	RET,	0xC0,	MNEMONIC1 | ARG_COND,
	RETI,	0xD9,	MNEMONIC0,
	RL,		0xCB10,	MNEMONIC1 | ARG_REG8,
	RLA,	0x17,	MNEMONIC0,
	RLC,	0xCB00,	MNEMONIC1 | ARG_REG8,
	RLCA,	0x07,	MNEMONIC0,
	RR,		0xCB18,	MNEMONIC1 | ARG_REG8,
	RRA,	0x1F,	MNEMONIC0,
	RRC,	0xCB08,	MNEMONIC1 | ARG_REG8,
	RRCA,	0x0F,	MNEMONIC0,
	RST,	0xC7,	MNEMONIC1 | ARG_RST,
	SBC,	0xDE,	MNEMONIC1 | ARG_DATA,
	SBC,	0xDE,	MNEMONIC2 | ARG_REG_A | ARG1(ARG_DATA),
	SBC,	0x98,	MNEMONIC1 | ARG_REG8,
	SBC,	0x98,	MNEMONIC2 | ARG_REG_A | ARG1(ARG_REG8),
	SCF,	0x37,	MNEMONIC0,
	SET,	0xCBC0,	MNEMONIC2 | ARG_BIT | ARG1(ARG_REG8),
	SLA,	0xCB20,	MNEMONIC1 | ARG_REG8,
	SRA,	0xCB28,	MNEMONIC1 | ARG_REG8,
	SRL,	0xCB38,	MNEMONIC1 | ARG_REG8,
	STOP,	0x1000,	MNEMONIC0,
	SUB,	0xD6,	MNEMONIC1 | ARG_DATA,
	SUB,	0xD6,	MNEMONIC2 | ARG_REG_A | ARG1(ARG_DATA),
	SUB,	0x90,	MNEMONIC1 | ARG_REG8,
	SUB,	0x90,	MNEMONIC2 | ARG_REG_A | ARG1(ARG_REG8),
	SWAP,	0xCB30,	MNEMONIC1 | ARG_REG8,
	XOR,	0xEE,	MNEMONIC1 | ARG_DATA,
	XOR,	0xEE,	MNEMONIC2 | ARG_REG_A | ARG1(ARG_DATA),
	XOR,	0xA8,	MNEMONIC1 | ARG_REG8,
	XOR,	0xA8,	MNEMONIC2 | ARG_REG_A | ARG1(ARG_REG8)
};

